local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/10x00/Tools/main/Venyx%20UI"))()
local ulib = library.new("My Hero", 5013109572)

--//Page Starting\\--
local page = ulib:addPage("Main", 5012544693)

local section1 = page:addSection("Autofarms")
local section2 = page:addSection("Settings")
local section3 = page:addSection("Skills")

--//Anti-AFK\\--
for i, v in next, getconnections(game.Players.LocalPlayer.Idled) do
    v:Disable();
end;

--//Vars\\--
local CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
local Player = game:GetService("Players").LocalPlayer;
local Human = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid");
local MobP = "";
local QuestP = "";
local USERID = game.Players.LocalPlayer.UserId
local DIS = -3

--//Info\\--
tweenService, tweenInfo = game:GetService("TweenService"), TweenInfo.new(1, Enum.EasingStyle.Linear)

--//NoClip\\--
game:GetService("RunService").Stepped:Connect(function()
    if _G.Autofarm then
        game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
    end;
end);

--//Quest Table\\--
local QuestTbl = {};

for i,v in pairs(game:GetService("ReplicatedStorage").Package.Quests:GetChildren()) do
    table.insert(QuestTbl,v.Name)
end;

--//Npc Table\\--
local NPC = {};

for i,v in pairs(game:GetService("Workspace").Others.NPCSpawns:GetChildren()) do
    table.insert(NPC,v.Name)
end;

section1:addDropdown("Mob",NPC, function(value)
MobP = value
end);


section1:addDropdown("Quest",QuestTbl, function(value)
QuestP = value
end);

section1:addToggle("Autofarm", nil, function(value)
    getgenv().Autofarm = value

    while getgenv().Autofarm and wait() do
        for i,v in pairs(game:GetService("Workspace").Living:GetChildren()) do
            if game.Players.LocalPlayer.Character and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then
                if v.Name == MobP and v.Humanoid.Health > 0 then
                    repeat wait() 
                    tween = tweenService:Create(game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart, tweenInfo, {CFrame = CFrame.new(v.HumanoidRootPart.Position + v.HumanoidRootPart.CFrame.lookVector * DIS)})
                    tween:Play()
                    game:GetService("ReplicatedStorage").Package.Events.Combat:FireServer(1,Lol) game:GetService("ReplicatedStorage").Package.Events.Combat:FireServer(2,Lol) game:GetService("ReplicatedStorage").Package.Events.Combat:FireServer(3,Lol) game:GetService("ReplicatedStorage").Package.Events.Combat:FireServer(4,Lol) game:GetService("ReplicatedStorage").Package.Events.Combat:FireServer(5,Lol)
                    until v.Humanoid.Health <= 0 or not getgenv().Autofarm
                end;
            end;
        end;
    end;
end);


section1:addToggle("Auto Quest", nil, function(value)
    _G.AutoQuest = value

    while _G.AutoQuest and wait() do
    if game:GetService("ReplicatedStorage").Datas[USERID].QuestProgress.Value == 0 then
            game:GetService("ReplicatedStorage").Package.Events.GetQuest:InvokeServer(QuestP)
        end; 
    end;
end);

section2:addToggle("Auto Equip", nil, function(value)
    _G.AutoEquip = value

    while _G.AutoEquip and wait() do
        if game.Players.LocalPlayer.Status.Weapon.Value == "None" then
            game:GetService("ReplicatedStorage").Package.Events.EquipUnequip:InvokeServer()
        end;
    end;
end);

section2:addToggle("Invisibilty", nil, function(value)
    _G.Invis = value

    while _G.Invis and wait() do
        if game.Players.LocalPlayer.Character then
        if game.Players.LocalPlayer.Character:FindFirstChild("LowerTorso") then
            if game.Players.LocalPlayer.Character.LowerTorso:FindFirstChild("Root") then
                game.Players.LocalPlayer.Character.LowerTorso.Root:Destroy() end;
            end;
        end;
    end;
end);

section2:addToggle("Hide Name", nil, function(value)
    _G.HideN = value

    while _G.HideN and wait() do
        for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
            if v.Name == 'Pants' or v.ClassName == "Accessory" or v.Name == 'Shirt' or v.Name == 'Title' then
                 v:Destroy()
            end;
        end; 
    end;
end);

section3:addToggle("Use Skills", nil, function(value)
    _G.Using = value

        while _G.Using and wait() do
            if _G.Skills == "1" then
            local a={[1]="1",[2]="Down",[3]={["MouseHit"]=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,["Mobile"]=false}}game:GetService("ReplicatedStorage").Package.Events.Skill:InvokeServer(unpack(a)) wait(3)
        elseif _G.Skills == "2" then
            local a={[1]="1",[2]="Down",[3]={["MouseHit"]=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,["Mobile"]=false}}game:GetService("ReplicatedStorage").Package.Events.Skill:InvokeServer(unpack(a)) wait(3)
            local a={[1]="2",[2]="Down",[3]={["MouseHit"]=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,["Mobile"]=false}}game:GetService("ReplicatedStorage").Package.Events.Skill:InvokeServer(unpack(a)) wait(3)
        elseif _G.Skills == "3" then
            local a={[1]="1",[2]="Down",[3]={["MouseHit"]=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,["Mobile"]=false}}game:GetService("ReplicatedStorage").Package.Events.Skill:InvokeServer(unpack(a)) wait(3)
            local a={[1]="2",[2]="Down",[3]={["MouseHit"]=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,["Mobile"]=false}}game:GetService("ReplicatedStorage").Package.Events.Skill:InvokeServer(unpack(a)) wait(3)
            local a={[1]="3",[2]="Down",[3]={["MouseHit"]=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,["Mobile"]=false}}game:GetService("ReplicatedStorage").Package.Events.Skill:InvokeServer(unpack(a)) wait(3)
        elseif _G.Skills == "4" then
            local a={[1]="1",[2]="Down",[3]={["MouseHit"]=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,["Mobile"]=false}}game:GetService("ReplicatedStorage").Package.Events.Skill:InvokeServer(unpack(a)) wait(3)
            local a={[1]="2",[2]="Down",[3]={["MouseHit"]=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,["Mobile"]=false}}game:GetService("ReplicatedStorage").Package.Events.Skill:InvokeServer(unpack(a)) wait(3)
            local a={[1]="3",[2]="Down",[3]={["MouseHit"]=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,["Mobile"]=false}}game:GetService("ReplicatedStorage").Package.Events.Skill:InvokeServer(unpack(a)) wait(3)
            local a={[1]="4",[2]="Down",[3]={["MouseHit"]=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,["Mobile"]=false}}game:GetService("ReplicatedStorage").Package.Events.Skill:InvokeServer(unpack(a)) wait(3) 
        elseif _G.Skills == "5" then
            local a={[1]="1",[2]="Down",[3]={["MouseHit"]=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,["Mobile"]=false}}game:GetService("ReplicatedStorage").Package.Events.Skill:InvokeServer(unpack(a)) wait(3)
            local a={[1]="2",[2]="Down",[3]={["MouseHit"]=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,["Mobile"]=false}}game:GetService("ReplicatedStorage").Package.Events.Skill:InvokeServer(unpack(a)) wait(3)
            local a={[1]="3",[2]="Down",[3]={["MouseHit"]=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,["Mobile"]=false}}game:GetService("ReplicatedStorage").Package.Events.Skill:InvokeServer(unpack(a)) wait(3)
            local a={[1]="4",[2]="Down",[3]={["MouseHit"]=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,["Mobile"]=false}}game:GetService("ReplicatedStorage").Package.Events.Skill:InvokeServer(unpack(a)) wait(3)
            local a={[1]="5",[2]="Down",[3]={["MouseHit"]=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame,["Mobile"]=false}}game:GetService("ReplicatedStorage").Package.Events.Skill:InvokeServer(unpack(a)) wait(3)
        end;
    end;
end);

section3:addSlider("Skills", 0, 0, 5, function(value)
    _G.Skills = value
end);
